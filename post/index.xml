<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on UNstable</title><link>https://visualcomputingg1.github.io/portafolio/post/</link><description>Recent content in Posts on UNstable</description><generator>Source Themes academia (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright &amp;copy; {year}</copyright><lastBuildDate>Mon, 13 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://visualcomputingg1.github.io/portafolio/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Algoritmo Z-buffer</title><link>https://visualcomputingg1.github.io/portafolio/post/visibilidad/</link><pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/visibilidad/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>Descrita por Wolfgang Straßer en su tesis doctoral sobre algoritmos rápidos para el renderizado de objetos ocluidos. El algoritmo funciona, cuando en un pipeline de renderizado 3d, cuando se proyecta un objeto en la pantalla, la profundidad (valor z) de un fragmento generado en la imagen de la pantalla proyectada se compara con el valor ya almacenado en el buffer (test de profundidad), y lo sustituye si el nuevo valor es más cercano. Funciona en tándem con el rasterizador, que calcula los valores de color. El fragmento emitido por el rasterizador se guarda si no se solapa con otro fragmento. &lt;em>&lt;a href="https://en.wikipedia.org/wiki/Z-buffering">&lt;strong>Z-buffering&lt;/strong>&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>En la actualidad, su uso principal es el de los videojuegos, que requieren un procesamiento rápido y preciso de las escenas en 3D. Además, los datos del buffer Z obtenidos al renderizar una superficie desde el punto de vista de la luz permiten la creación de sombras mediante la técnica de mapeo de sombras.&lt;/p>
&lt;p>&lt;img src="z-buffer.png" alt="z-buffer.png">&lt;/p>
&lt;h2 id="z-buffer-vs-el-algoritmo-del-pintor">Z-buffer vs el Algoritmo del pintor&lt;/h2>
&lt;p>Si se estuviera dibujando una escena en un lienzo 2D, se gestionarí la profundidad dibujando primero los objetos más lejanos. De esta manera, los objetos más cercanos tienen la posibilidad de dibujarse encima de los objetos más lejanos dibujados previamente. Esto se llama el algoritmo del pintor.&lt;/p>
&lt;p>Sin embargo, con Z-buffer, se pude dibujar cosas en cualquier orden y se seguirá mostrando los objetos más cercanos delante (a menos que se diga lo contrario expliciamente). Lo hace registrando la profundidad de cada píxel en un buffer de profundidad, que es como una imagen monocromática del mismo tamaño que el lienzo principal. En lugar de interpretar los valores de los píxeles en el buffer de profundidad como colores, los lee como profundidad.&lt;/p>
&lt;p>&lt;img src="alg_pintor.png" alt="alg_pintor.png">&lt;/p>
&lt;h2 id="ventajas-y-desventajas">Ventajas y desventajas&lt;/h2>
&lt;h3 id="ventajas">Ventajas:&lt;/h3>
&lt;ul>
&lt;li>Fácil de usar.&lt;/li>
&lt;li>Puede implementarse fácilmente en sapce de objetos o imágenes.&lt;/li>
&lt;li>Se puede ejecutar rápidamente, incluso con muchos polígonos.&lt;/li>
&lt;/ul>
&lt;h3 id="desventajas">Desventajas:&lt;/h3>
&lt;ul>
&lt;li>Ocupa mucha memoria.&lt;/li>
&lt;li>No puede hacer superficies transparentes sin código adicional.&lt;/li>
&lt;/ul>
&lt;h2 id="el-algoritmo-de-desenfoque">El algoritmo de desenfoque&lt;/h2>
&lt;p>El algoritmo consiste en mirar todos los píxeles cercanos que se pueda, y detectar si se esta lo suficientemente cerca como para que su desenfoque toque el píxel actual, y si ese desenfoque iría por delante o por detrás del píxel actual. &lt;em>&lt;a href="https://editor.p5js.org/davepagurek/sketches/cmcqbj1II">&lt;strong>Desenfoque p5.js&lt;/strong>&lt;/a>&lt;/em>&lt;/p>
&lt;iframe
id="zbuff"
style="width:700px; height:500px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=zbuff.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>z-buffer Algoritmo&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75715e">// First of all, initialize the depth of each pixel.
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">d&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">infinite&lt;/span> &lt;span style="color:#75715e">// Max length
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">// Initialize the color value for each pixel to the background color
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">background&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>
&lt;span style="color:#75715e">// For each polygon, do the following steps :
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#a6e22e">each&lt;/span> &lt;span style="color:#a6e22e">pixel&lt;/span> &lt;span style="color:#66d9ef">in&lt;/span> &lt;span style="color:#a6e22e">polygons&lt;/span> &lt;span style="color:#a6e22e">projection&lt;/span>)
{
&lt;span style="color:#75715e">// Find depth i.e, z of polygon
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// at (x, y) corresponding to pixel (i, j)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">z&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>))
{
&lt;span style="color:#a6e22e">d&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">z&lt;/span>;
&lt;span style="color:#a6e22e">c&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>;
}
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details>
&lt;h2 id="referencias">Referencias&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.davepagurek.com/blog/depth-of-field/">https://www.davepagurek.com/blog/depth-of-field/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.davrous.com/2013/06/21/tutorial-part-4-learning-how-to-write-a-3d-software-engine-in-c-ts-or-js-rasterization-z-buffering/#code4js">https://www.davrous.com/2013/06/21/tutorial-part-4-learning-how-to-write-a-3d-software-engine-in-c-ts-or-js-rasterization-z-buffering/#code4js&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.helsinki.fi/group/goa/render/piilopinnat/z_buffer.html">https://www.cs.helsinki.fi/group/goa/render/piilopinnat/z_buffer.html&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Dual Axis Illusion</title><link>https://visualcomputingg1.github.io/portafolio/post/Ilusion4/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/Ilusion4/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>Esta forma giratoria parece desafiar la lógica al girar alrededor del eje horizontal y vertical, al mismo tiempo. Para hacer las cosas aún más confusas, la dirección de rotación también es ambigua.
El autor, Frank Force, menciona que la idea de crear Dual Axis surgió en la mente de Force mientras experimentaba con las curvas de Lissajous (un sistema de ecuaciones que genera una acción armónica compleja). Force creía que, con la mezcla adecuada de concentración y dedicación, podría hacer que el sistema girara alrededor de cualquier eje.&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>Son útiles para comprender mejor las limitaciones del sentido visual del ser humano y la posibilidad de distorsión, ya sea en la forma, la dimensión, el color y la perspectiva de lo observado. Estos son sólo algunos ejemplos de cómo nuestro cerebro interpreta de manera distintiva el mundo que nos rodea. Como expresó el autor, el fin era crear una ilusion optica hipnótica, relajante y llamativa, también lo relaciona con la metáfora de ver las cosas desde diferentes perspectivas.&lt;/p>
&lt;iframe
id="dualaxisilusion"
style="width:730px; height:520px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=dualaxisilusion.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;h2 id="al-detalle">Al detalle&lt;/h2>
&lt;p>En el siguiente video se puede observar sobre que ejes rota.&lt;/p>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;div id="video">&lt;/div>
&lt;script>
new p5((p5) => {
let fingers;
p5.setup = function() {
p5.createCanvas(1280, 700);
// specify multiple formats for different browsers
fingers = p5.createVideo(['/portafolio/post/Ilusion4/Dual_Axis_Illusion.mov','/portafolio/post/Ilusion4/Dua_Axis_Illusion.webm']);
fingers.hide(); // by default video shows up in separate dom
// element. hide it and draw it to the canvas instead
};
p5.draw = function() {
p5.background(150);
p5.image(fingers, 0, 0); // draw a second copy to canvas
};
p5.mousePressed = function() {
fingers.loop(); // set the video to loop and start playing
}
}, "video" );
&lt;/script>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#a6e22e">windowWidth&lt;/span>, &lt;span style="color:#a6e22e">windowHeight&lt;/span>);
&lt;span style="color:#a6e22e">frameRate&lt;/span>(&lt;span style="color:#ae81ff">35&lt;/span>)
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">10&lt;/span>);
}
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">t&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">a&lt;/span>,&lt;span style="color:#a6e22e">b&lt;/span>,&lt;span style="color:#a6e22e">c&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">aa&lt;/span>,&lt;span style="color:#a6e22e">bb&lt;/span>,&lt;span style="color:#a6e22e">cc&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">l1&lt;/span>,&lt;span style="color:#a6e22e">l2&lt;/span>,&lt;span style="color:#a6e22e">r1&lt;/span>,&lt;span style="color:#a6e22e">r2&lt;/span>
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">radX&lt;/span>,&lt;span style="color:#a6e22e">radY&lt;/span>
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">draw&lt;/span>() {
&lt;span style="color:#a6e22e">radX&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;span style="color:#a6e22e">radY&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">15&lt;/span>);
&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">frameCount&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">0.015&lt;/span>
&lt;span style="color:#75715e">//stroke(cos(2*t)*255,cos(2*t+2/5*PI)*255,cos(2*t+4/5*PI)*255)
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>)
&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">b&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">c&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">l1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>
&lt;span style="color:#a6e22e">l2&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>
&lt;span style="color:#a6e22e">r1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1.5&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>
&lt;span style="color:#a6e22e">r2&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1.5&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>
&lt;span style="color:#a6e22e">aa&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">bb&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">cc&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">cos&lt;/span>(&lt;span style="color:#a6e22e">t&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">PI&lt;/span>&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>)&lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">radX&lt;/span>
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">35&lt;/span>)
&lt;span style="color:#a6e22e">noFill&lt;/span>();
&lt;span style="color:#a6e22e">beginShape&lt;/span>();
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">cc&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">bb&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">aa&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">cc&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">c&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">bb&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">b&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">aa&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>);
&lt;span style="color:#a6e22e">curveVertex&lt;/span>(&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">cc&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#a6e22e">radY&lt;/span>);
&lt;span style="color:#a6e22e">endShape&lt;/span>();
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item><item><title>Pies escalonados</title><link>https://visualcomputingg1.github.io/portafolio/post/ilusion3/</link><pubDate>Mon, 08 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/ilusion3/</guid><description>&lt;h2 id="descripción">Descripción&lt;/h2>
&lt;p>Observe el movimiento de los rectangulos azul y amarillo. Los bloques parecen tener un desplazamiento alternante, asi como dos pies yendo punta a punta. Este efecto es más pronunciado si no se mira a los rectangulos directamente si no se mira entre ellos, y también cuando estos no estan del todo juntos, asi como se ve en la animación.&lt;/p>
&lt;h2 id="explicación">Explicación&lt;/h2>
&lt;p>Cuando el rectangulo azul se encuentra sobre las franjas blancas, el contraste es alto y fácilmente visible, por lo que parece moverse más rápido de lo que realmente lo esta haciendo. Por el contrario cuando el rectangulo azul está en las franjas de color negro, el contraste es bajo y más difícil de ver, por lo que el movimiento parece más lento.&lt;/p>
&lt;p>Los efectos opuestos ocurren con el bus amarillo. Para mayor claridad puede ver el efecto en: Wikipedia y Michael Bach&amp;rsquo;s blog&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>Haga click sobre la imagen para remover/poner las barrras y ver como los dos objetos van a velocidad constante y siempre se mantienen a la misma distancia el uno del otro.&lt;/p>
&lt;iframe
id="piesEscalonados"
style="width:730px; height:730px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=piesEscalonados.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">xspeed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">bars&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#ae81ff">640&lt;/span>, &lt;span style="color:#ae81ff">640&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">draw&lt;/span>() {
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#a6e22e">color&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>));
&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span> &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;span style="color:#a6e22e">xspeed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">xspeed&lt;/span>;
}
&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xspeed&lt;/span>;
&lt;span style="color:#a6e22e">createBars&lt;/span>();
&lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>);
&lt;span style="color:#a6e22e">rect&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#ae81ff">200&lt;/span>, &lt;span style="color:#ae81ff">125&lt;/span>, &lt;span style="color:#ae81ff">50&lt;/span>);
&lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;span style="color:#a6e22e">rect&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span>, &lt;span style="color:#ae81ff">400&lt;/span>, &lt;span style="color:#ae81ff">125&lt;/span>, &lt;span style="color:#ae81ff">50&lt;/span>);
&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">bars&lt;/span>) {
&lt;span style="color:#a6e22e">createBars&lt;/span>();
}
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">createBars&lt;/span>() {
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">len&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">20&lt;/span>;
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#a6e22e">len&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span>&lt;span style="color:#f92672">++&lt;/span>) {
&lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;white&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">%&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#a6e22e">rect&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">len&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>, &lt;span style="color:#a6e22e">len&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">height&lt;/span>);
}
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">mousePressed&lt;/span>() {
&lt;span style="color:#a6e22e">bars&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">bars&lt;/span>;
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">keyPressed&lt;/span>() {
&lt;span style="color:#a6e22e">bars&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">bars&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item><item><title>Contornos Ilusorios</title><link>https://visualcomputingg1.github.io/portafolio/post/Ilusion1/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/Ilusion1/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>Contornos ilusorios o contornos subjetivos son ilusiones ópticas que evocan la percepción de una era sin luminancia o
cambio de color dentro del borde. El brillo ilusorio y su profundidad ordenados son frecuentemente acompañados de
contornos ilusorios. Friedrich Schumann es a menudo acreditado con el descubrimiento de los contornos ilusorios
alrededor de los principios del siglo veinte, sin embargo los contornos ilusorios son presentados en un arte de
citar a las Edades Medias. La hoja Científica Americana de Gaetano Kanizsa escrita en 1976 marca el resurgimiento de
interés en los contornos ilusorios por científicos de visión. &lt;em>&lt;a href="https://es.wikipedia.org/wiki/Contornos_ilusorios">&lt;strong>contornos ilusorios&lt;/strong>&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>Al ser estimulos que afectan directamente las bases neuronales de las percepciones suelen ser utilizados para llamar la
atencion de los receptores de manera discreta, formando figuras que realmente no estan en la imagen&lt;/p>
&lt;p>&lt;img src="img_1.png" alt="img_1.png">&lt;/p>
&lt;iframe
id="contournsIlusion"
style="width:425px; height:425px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=contournsIlusion.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#ae81ff">400&lt;/span>, &lt;span style="color:#ae81ff">400&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">draw&lt;/span>() {
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">240&lt;/span>);
&lt;span style="color:#75715e">//First
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;yellow&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">150&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">150&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#75715e">//Second
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;blue&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;yellow&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">250&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">350&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">250&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">350&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0.003&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item><item><title>Ejemplo de rasterizacion</title><link>https://visualcomputingg1.github.io/portafolio/post/iluminacion/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/iluminacion/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>Contornos ilusorios o contornos subjetivos son ilusiones ópticas que evocan la percepción de una era sin luminancia o
cambio de color dentro del borde. El brillo ilusorio y su profundidad ordenados son frecuentemente acompañados de
contornos ilusorios. Friedrich Schumann es a menudo acreditado con el descubrimiento de los contornos ilusorios
alrededor de los principios del siglo veinte, sin embargo los contornos ilusorios son presentados en un arte de
citar a las Edades Medias. La hoja Científica Americana de Gaetano Kanizsa escrita en 1976 marca el resurgimiento de
interés en los contornos ilusorios por científicos de visión. &lt;em>&lt;a href="https://es.wikipedia.org/wiki/Contornos_ilusorios">&lt;strong>contornos ilusorios&lt;/strong>&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>Al ser estimulos que afectan directamente las bases neuronales de las percepciones suelen ser utilizados para llamar la
atencion de los receptores de manera discreta, formando figuras que realmente no estan en la imagen&lt;/p>
&lt;p>&lt;img src="img_1.png" alt="img_1.png">&lt;/p>
&lt;iframe
id="contournsIlusion"
style="width:425px; height:425px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=contournsIlusion.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#ae81ff">400&lt;/span>, &lt;span style="color:#ae81ff">400&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">draw&lt;/span>() {
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">240&lt;/span>);
&lt;span style="color:#75715e">//First
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;yellow&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">150&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">150&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#75715e">//Second
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;blue&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;yellow&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">250&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">350&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">250&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">2&lt;/span>)
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#ae81ff">350&lt;/span>, &lt;span style="color:#ae81ff">250&lt;/span>)
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span>)
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#ae81ff">80&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>, &lt;span style="color:#a6e22e">HALF_PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0.003&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item><item><title>Ejemplo de rasterizacion</title><link>https://visualcomputingg1.github.io/portafolio/post/rasterizacion/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/rasterizacion/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>Usamos el algoritmo del punto medio para calcular todos los puntos perimetrales en el primer octante, y luego los reflejamos a los demas octantes, basados en la propiedad simetrica de la figura a generar
el algoritmo es muy similar al algoritmo para generar lineas basado en el punto medio, lo unico que cambia es la condicion de frontera&lt;/p>
&lt;p>paara cualquier pixel (x,y), el siguiente pixel en ser pintado es bien sea &lt;code>(x, y+1)&lt;/code> o &lt;code>(x-1, y+1)&lt;/code>. Esto se decide en los siguientes pasos:&lt;/p>
&lt;ol>
&lt;li>Encuentra el punto medio &lt;code>p&lt;/code> para ambos posibles pixeles &lt;code>(x-0.5, y+1)&lt;/code>&lt;/li>
&lt;li>si &lt;code>p&lt;/code> yace dentro del perimetro del perimetro o bien sobre el, entonces pintamos &lt;code>(x, y+1)&lt;/code>, de otro modo si esta afuera pintmaremos &lt;code> (x-1, y+1)&lt;/code>
&lt;a href="https://www.geeksforgeeks.org/mid-point-circle-drawing-algorithm/">geeksforgeeks&lt;/a>&lt;/li>
&lt;/ol>
&lt;h3 id="condicion-de-frontera">Condicion de frontera&lt;/h3>
&lt;p>decidir si el punto yace dentro o fuera del perimetro se decide a travez de la siguiente formula:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">F(p) &lt;span style="color:#f92672">=&lt;/span> x2 &lt;span style="color:#f92672">+&lt;/span> y2 &lt;span style="color:#f92672">-&lt;/span> r2
&lt;span style="color:#66d9ef">if&lt;/span> F(p)&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>: &lt;span style="color:#66d9ef">return&lt;/span> inside
&lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> F(p) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>: &lt;span style="color:#66d9ef">return&lt;/span> inside &lt;span style="color:#75715e"># it means to be on the perimeter&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span>: &lt;span style="color:#66d9ef">return&lt;/span> outside
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ejemplo-estatico">Ejemplo estatico&lt;/h2>
&lt;p>&lt;img src="295px-Midpoint_circle_algorithm_animation_(radius_23).gif" alt="">&lt;/p>
&lt;h2 id="implementacion">Implementacion&lt;/h2>
&lt;iframe
id="contournsIlusion"
style="width:625px; height:625px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=contournsIlusion.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#75715e">// initial values
&lt;/span>&lt;span style="color:#75715e">// initial values
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span>, &lt;span style="color:#a6e22e">r&lt;/span>, &lt;span style="color:#a6e22e">d&lt;/span>, &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#a6e22e">yc&lt;/span>;
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">grids&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">26&lt;/span>;
&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#ae81ff">600&lt;/span>, &lt;span style="color:#ae81ff">600&lt;/span>);
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>);
&lt;span style="color:#a6e22e">scalFact&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#a6e22e">grids&lt;/span>;
&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">8&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
&lt;span style="color:#a6e22e">xc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
&lt;span style="color:#a6e22e">yc&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
&lt;span style="color:#a6e22e">showGrids&lt;/span>();
&lt;span style="color:#a6e22e">showRefCircle&lt;/span>();
&lt;span style="color:#a6e22e">bresenham&lt;/span>();
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">showGrids&lt;/span>() {
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>);
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#a6e22e">i&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">grids&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>) {
&lt;span style="color:#a6e22e">line&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">height&lt;/span>);
&lt;span style="color:#a6e22e">line&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">width&lt;/span>, &lt;span style="color:#a6e22e">i&lt;/span>);
}
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">showRefCircle&lt;/span>() {
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">200&lt;/span>);
&lt;span style="color:#a6e22e">noFill&lt;/span>();
&lt;span style="color:#a6e22e">circle&lt;/span>(&lt;span style="color:#a6e22e">xc&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#a6e22e">scalFact&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#a6e22e">yc&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#a6e22e">scalFact&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>), &lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">bresenham&lt;/span>() {
&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>;
&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">3&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">r&lt;/span>);
&lt;span style="color:#a6e22e">symPlot&lt;/span>();
&lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#a6e22e">y&lt;/span>) {
&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) {
&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#ae81ff">6&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>);
} &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">d&lt;/span> &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">x&lt;/span>) &lt;span style="color:#f92672">-&lt;/span> (&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">y&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> (&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>);
&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">-=&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
}
&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#a6e22e">scalFact&lt;/span>;
&lt;span style="color:#a6e22e">symPlot&lt;/span>();
}
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">symPlot&lt;/span>() {
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
&lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">y&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">xc&lt;/span>, &lt;span style="color:#a6e22e">x&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">yc&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">fillPixel&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span>) {
&lt;span style="color:#a6e22e">noStroke&lt;/span>();
&lt;span style="color:#a6e22e">squareColor&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">color&lt;/span>(&lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>);
&lt;span style="color:#a6e22e">squareColor&lt;/span>.&lt;span style="color:#a6e22e">setAlpha&lt;/span>(&lt;span style="color:#ae81ff">100&lt;/span>);
&lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#a6e22e">squareColor&lt;/span>);
&lt;span style="color:#a6e22e">square&lt;/span>(&lt;span style="color:#a6e22e">x&lt;/span>, &lt;span style="color:#a6e22e">y&lt;/span>, &lt;span style="color:#a6e22e">scalFact&lt;/span>);
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item><item><title>Moving Dots Illusion</title><link>https://visualcomputingg1.github.io/portafolio/post/Ilusion2/</link><pubDate>Thu, 04 Nov 2021 00:00:00 +0000</pubDate><guid>https://visualcomputingg1.github.io/portafolio/post/Ilusion2/</guid><description>&lt;h2 id="descripcion">Descripcion&lt;/h2>
&lt;p>En esta ilusión de puntos en movimiento, los puntos parecen moverse en un movimiento ondulatorio, pero en realidad los puntos están girando en su lugar, creando una ilusión de movimiento ondulado.&lt;/p>
&lt;h2 id="usabilidad">Usabilidad&lt;/h2>
&lt;p>Las ilusiones de movimiento suelen funcionar presentando un patrón compuesto por colores o tonos de alto contraste. Estos aspectos contrastantes desencadenan diferentes señales neuronales simultáneamente, lo que da como resultado un efecto de detección de movimiento cuando en realidad no hay movimiento.&lt;/p>
&lt;iframe
id="contournsIlusion"
style="width:730px; height:730px"
srcdoc="
&lt;!DOCTYPE html>
&lt;html>
&lt;head>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js>&lt;/script>
&lt;script src=https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js>&lt;/script>
&lt;script src=contournsIlusion.js>&lt;/script>
&lt;/head>
&lt;body>
&lt;/body>
&lt;/html>
"
>&lt;/iframe>
&lt;details >&lt;summary>code to the solution&lt;/summary>
&lt;div class="markdown-inner">
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">setup&lt;/span>() {
&lt;span style="color:#a6e22e">createCanvas&lt;/span>(&lt;span style="color:#ae81ff">700&lt;/span>, &lt;span style="color:#ae81ff">700&lt;/span>);
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">draw&lt;/span>() {
&lt;span style="color:#a6e22e">background&lt;/span>(&lt;span style="color:#ae81ff">50&lt;/span>);
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">width&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>; &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>) {
&lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">let&lt;/span> &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>; &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#a6e22e">height&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#ae81ff">45&lt;/span>; &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">50&lt;/span>) {
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">fill&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">168&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>);
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">150&lt;/span>);
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>);
&lt;span style="color:#a6e22e">ellipse&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>, &lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#ae81ff">25&lt;/span>);
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>);
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">HALF_PI&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">i&lt;/span> &lt;span style="color:#f92672">-&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">168&lt;/span>, &lt;span style="color:#ae81ff">168&lt;/span>);
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>);
&lt;span style="color:#a6e22e">noFill&lt;/span>();
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">30&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">push&lt;/span>()
&lt;span style="color:#a6e22e">translate&lt;/span>(&lt;span style="color:#a6e22e">i&lt;/span>, &lt;span style="color:#a6e22e">j&lt;/span>);
&lt;span style="color:#a6e22e">rotate&lt;/span>(&lt;span style="color:#a6e22e">QUARTER_PI&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#a6e22e">j&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span>)
&lt;span style="color:#a6e22e">stroke&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>, &lt;span style="color:#ae81ff">255&lt;/span>);
&lt;span style="color:#a6e22e">strokeWeight&lt;/span>(&lt;span style="color:#ae81ff">3&lt;/span>);
&lt;span style="color:#a6e22e">noFill&lt;/span>();
&lt;span style="color:#a6e22e">arc&lt;/span>(&lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">0&lt;/span>, &lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#ae81ff">25&lt;/span>, &lt;span style="color:#a6e22e">PI&lt;/span> , &lt;span style="color:#ae81ff">0&lt;/span>)
&lt;span style="color:#a6e22e">pop&lt;/span>()
&lt;span style="color:#a6e22e">angle&lt;/span> &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#ae81ff">0.0005&lt;/span>
}
}
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/details></description></item></channel></rss>